<?php

/**
 * This is the model base class for the table "report_periodic_emails".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ReportPeriodicEmails".
 *
 * Columns in table "report_periodic_emails" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $ref
 * @property integer $user
 * @property integer $report
 * @property integer $period
 * @property integer $email_days
 * @property string $last_sent
 * @property integer $send_all_users
 *
 */
abstract class BaseReportPeriodicEmails extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'report_periodic_emails';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ReportPeriodicEmails|ReportPeriodicEmails', $n);
	}

	public static function representingColumn() {
		return 'last_sent';
	}

	public function rules() {
		return array(
			array('user, report, period, email_days, send_all_users', 'numerical', 'integerOnly'=>true),
			array('last_sent', 'safe'),
			array('user, report, period, email_days, last_sent, send_all_users', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ref, user, report, period, email_days, last_sent, send_all_users', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ref' => Yii::t('app', 'Ref'),
			'user' => Yii::t('app', 'User'),
			'report' => Yii::t('app', 'Report'),
			'period' => Yii::t('app', 'Period'),
			'email_days' => Yii::t('app', 'Email Days'),
			'last_sent' => Yii::t('app', 'Last Sent'),
			'send_all_users' => Yii::t('app', 'Send All Users'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ref', $this->ref);
		$criteria->compare('user', $this->user);
		$criteria->compare('report', $this->report);
		$criteria->compare('period', $this->period);
		$criteria->compare('email_days', $this->email_days);
		$criteria->compare('last_sent', $this->last_sent, true);
		$criteria->compare('send_all_users', $this->send_all_users);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
