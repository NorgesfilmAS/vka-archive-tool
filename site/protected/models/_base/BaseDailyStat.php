<?php

/**
 * This is the model base class for the table "daily_stat".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DailyStat".
 *
 * Columns in table "daily_stat" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $year
 * @property integer $month
 * @property integer $day
 * @property integer $usergroup
 * @property string $activity_type
 * @property integer $object_ref
 * @property integer $count
 *
 */
abstract class BaseDailyStat extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'daily_stat';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DailyStat|DailyStats', $n);
	}

	public static function representingColumn() {
		return 'activity_type';
	}

	public function rules() {
		return array(
			array('year, month, day, usergroup, object_ref, count', 'numerical', 'integerOnly'=>true),
			array('activity_type', 'length', 'max'=>50),
			array('year, month, day, usergroup, activity_type, object_ref, count', 'default', 'setOnEmpty' => true, 'value' => null),
			array('year, month, day, usergroup, activity_type, object_ref, count', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'year' => Yii::t('app', 'Year'),
			'month' => Yii::t('app', 'Month'),
			'day' => Yii::t('app', 'Day'),
			'usergroup' => Yii::t('app', 'Usergroup'),
			'activity_type' => Yii::t('app', 'Activity Type'),
			'object_ref' => Yii::t('app', 'Object Ref'),
			'count' => Yii::t('app', 'Count'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('year', $this->year);
		$criteria->compare('month', $this->month);
		$criteria->compare('day', $this->day);
		$criteria->compare('usergroup', $this->usergroup);
		$criteria->compare('activity_type', $this->activity_type, true);
		$criteria->compare('object_ref', $this->object_ref);
		$criteria->compare('count', $this->count);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
