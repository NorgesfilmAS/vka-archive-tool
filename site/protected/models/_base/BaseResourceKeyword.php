<?php

/**
 * This is the model base class for the table "resource_keyword".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ResourceKeyword".
 *
 * Columns in table "resource_keyword" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $resource
 * @property integer $keyword
 * @property integer $hit_count
 * @property integer $position
 * @property integer $resource_type_field
 * @property integer $new_hit_count
 * @property integer $id
 *
 */
abstract class BaseResourceKeyword extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'resource_keyword';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ResourceKeyword|ResourceKeywords', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('resource, keyword, hit_count, position, resource_type_field, new_hit_count', 'numerical', 'integerOnly'=>true),
			array('resource, keyword, hit_count, position, resource_type_field, new_hit_count', 'default', 'setOnEmpty' => true, 'value' => null),
			array('resource, keyword, hit_count, position, resource_type_field, new_hit_count, id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'resource' => Yii::t('app', 'Resource'),
			'keyword' => Yii::t('app', 'Keyword'),
			'hit_count' => Yii::t('app', 'Hit Count'),
			'position' => Yii::t('app', 'Position'),
			'resource_type_field' => Yii::t('app', 'Resource Type Field'),
			'new_hit_count' => Yii::t('app', 'New Hit Count'),
			'id' => Yii::t('app', 'ID'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('resource', $this->resource);
		$criteria->compare('keyword', $this->keyword);
		$criteria->compare('hit_count', $this->hit_count);
		$criteria->compare('position', $this->position);
		$criteria->compare('resource_type_field', $this->resource_type_field);
		$criteria->compare('new_hit_count', $this->new_hit_count);
		$criteria->compare('id', $this->id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
