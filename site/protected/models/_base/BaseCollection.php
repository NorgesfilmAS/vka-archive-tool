<?php

/**
 * This is the model base class for the table "collection".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Collection".
 *
 * Columns in table "collection" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $ref
 * @property string $name
 * @property integer $user
 * @property string $created
 * @property integer $public
 * @property string $theme
 * @property string $theme2
 * @property string $theme3
 * @property integer $allow_changes
 * @property integer $cant_delete
 * @property string $keywords
 * @property integer $savedsearch
 * @property integer $home_page_publish
 * @property string $home_page_text
 * @property integer $home_page_image
 *
 */
abstract class BaseCollection extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'collection';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Collection|Collections', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('user, public, allow_changes, cant_delete, savedsearch, home_page_publish, home_page_image', 'numerical', 'integerOnly'=>true),
			array('name, theme, theme2, theme3', 'length', 'max'=>100),
			array('created, keywords, home_page_text', 'safe'),
			array('name, user, created, public, theme, theme2, theme3, allow_changes, cant_delete, keywords, savedsearch, home_page_publish, home_page_text, home_page_image', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ref, name, user, created, public, theme, theme2, theme3, allow_changes, cant_delete, keywords, savedsearch, home_page_publish, home_page_text, home_page_image', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ref' => Yii::t('app', 'Ref'),
			'name' => Yii::t('app', 'Name'),
			'user' => Yii::t('app', 'User'),
			'created' => Yii::t('app', 'Created'),
			'public' => Yii::t('app', 'Public'),
			'theme' => Yii::t('app', 'Theme'),
			'theme2' => Yii::t('app', 'Theme2'),
			'theme3' => Yii::t('app', 'Theme3'),
			'allow_changes' => Yii::t('app', 'Allow Changes'),
			'cant_delete' => Yii::t('app', 'Cant Delete'),
			'keywords' => Yii::t('app', 'Keywords'),
			'savedsearch' => Yii::t('app', 'Savedsearch'),
			'home_page_publish' => Yii::t('app', 'Home Page Publish'),
			'home_page_text' => Yii::t('app', 'Home Page Text'),
			'home_page_image' => Yii::t('app', 'Home Page Image'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ref', $this->ref);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('user', $this->user);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('public', $this->public);
		$criteria->compare('theme', $this->theme, true);
		$criteria->compare('theme2', $this->theme2, true);
		$criteria->compare('theme3', $this->theme3, true);
		$criteria->compare('allow_changes', $this->allow_changes);
		$criteria->compare('cant_delete', $this->cant_delete);
		$criteria->compare('keywords', $this->keywords, true);
		$criteria->compare('savedsearch', $this->savedsearch);
		$criteria->compare('home_page_publish', $this->home_page_publish);
		$criteria->compare('home_page_text', $this->home_page_text, true);
		$criteria->compare('home_page_image', $this->home_page_image);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
