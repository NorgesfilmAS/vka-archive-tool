<?php

/**
 * This is the model base class for the table "undo_transaction".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UndoTransaction".
 *
 * Columns in table "undo_transaction" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $creation_date
 * @property integer $resource_id
 * @property string $path
 * @property integer $is_confirmed
 * @property integer $is_rollback
 *
 */
abstract class BaseUndoTransaction extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'undo_transaction';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UndoTransaction|UndoTransactions', $n);
	}

	public static function representingColumn() {
		return 'creation_date';
	}

	public function rules() {
		return array(
			array('user_id, resource_id, is_confirmed, is_rollback', 'numerical', 'integerOnly'=>true),
			array('path', 'length', 'max'=>255),
			array('creation_date', 'safe'),
			array('user_id, creation_date, resource_id, path, is_confirmed, is_rollback', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, creation_date, resource_id, path, is_confirmed, is_rollback', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'User'),
			'creation_date' => Yii::t('app', 'Creation Date'),
			'resource_id' => Yii::t('app', 'Resource'),
			'path' => Yii::t('app', 'Path'),
			'is_confirmed' => Yii::t('app', 'Is Confirmed'),
			'is_rollback' => Yii::t('app', 'Is Rollback'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('resource_id', $this->resource_id);
		$criteria->compare('path', $this->path, true);
		$criteria->compare('is_confirmed', $this->is_confirmed);
		$criteria->compare('is_rollback', $this->is_rollback);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
