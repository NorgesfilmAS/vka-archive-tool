<?php

/**
 * This is the model base class for the table "processing_job".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProcessingJob".
 *
 * Columns in table "processing_job" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $creation_date
 * @property string $started_date
 * @property string $ended_date
 * @property integer $is_finished
 * @property integer $priority
 * @property integer $job_type_id
 * @property integer $resource_id
 * @property integer $alternate_id
 * @property string $filename
 * @property string $original_filename
 * @property string $new_filename
 * @property string $action
 * @property integer $error
 * @property string $error_message
 * @property string $logging
 * @property integer $is_send_mail
 * @property integer $is_hidden
 *
 */
abstract class BaseProcessingJob extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'processing_job';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ProcessingJob|ProcessingJobs', $n);
	}

	public static function representingColumn() {
		return 'creation_date';
	}

	public function rules() {
		return array(
			array('user_id, is_finished, priority, job_type_id, resource_id, alternate_id, error, is_send_mail, is_hidden', 'numerical', 'integerOnly'=>true),
			array('filename, original_filename, new_filename', 'length', 'max'=>255),
			array('creation_date, started_date, ended_date, action, error_message, logging', 'safe'),
			array('user_id, creation_date, started_date, ended_date, is_finished, priority, job_type_id, resource_id, alternate_id, filename, original_filename, new_filename, action, error, error_message, logging, is_send_mail, is_hidden', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, creation_date, started_date, ended_date, is_finished, priority, job_type_id, resource_id, alternate_id, filename, original_filename, new_filename, action, error, error_message, logging, is_send_mail, is_hidden', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'User'),
			'creation_date' => Yii::t('app', 'Creation Date'),
			'started_date' => Yii::t('app', 'Started Date'),
			'ended_date' => Yii::t('app', 'Ended Date'),
			'is_finished' => Yii::t('app', 'Is Finished'),
			'priority' => Yii::t('app', 'Priority'),
			'job_type_id' => Yii::t('app', 'Job Type'),
			'resource_id' => Yii::t('app', 'Resource'),
			'alternate_id' => Yii::t('app', 'Alternate'),
			'filename' => Yii::t('app', 'Filename'),
			'original_filename' => Yii::t('app', 'Original Filename'),
			'new_filename' => Yii::t('app', 'New Filename'),
			'action' => Yii::t('app', 'Action'),
			'error' => Yii::t('app', 'Error'),
			'error_message' => Yii::t('app', 'Error Message'),
			'logging' => Yii::t('app', 'Logging'),
			'is_send_mail' => Yii::t('app', 'Is Send Mail'),
			'is_hidden' => Yii::t('app', 'Is Hidden'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('started_date', $this->started_date, true);
		$criteria->compare('ended_date', $this->ended_date, true);
		$criteria->compare('is_finished', $this->is_finished);
		$criteria->compare('priority', $this->priority);
		$criteria->compare('job_type_id', $this->job_type_id);
		$criteria->compare('resource_id', $this->resource_id);
		$criteria->compare('alternate_id', $this->alternate_id);
		$criteria->compare('filename', $this->filename, true);
		$criteria->compare('original_filename', $this->original_filename, true);
		$criteria->compare('new_filename', $this->new_filename, true);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('error', $this->error);
		$criteria->compare('error_message', $this->error_message, true);
		$criteria->compare('logging', $this->logging, true);
		$criteria->compare('is_send_mail', $this->is_send_mail);
		$criteria->compare('is_hidden', $this->is_hidden);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
