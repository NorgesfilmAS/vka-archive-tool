<?php

/**
 * This is the model base class for the table "resource_alt_files".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ResourceAltFiles".
 *
 * Columns in table "resource_alt_files" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $ref
 * @property integer $resource
 * @property string $name
 * @property string $description
 * @property string $file_name
 * @property string $file_extension
 * @property integer $file_size
 * @property string $creation_date
 * @property integer $unoconv
 * @property string $alt_type
 * @property integer $page_count
 *
 */
abstract class BaseResourceAltFiles extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'resource_alt_files';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ResourceAltFiles|ResourceAltFiles', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('resource, file_size, unoconv, page_count', 'numerical', 'integerOnly'=>true),
			array('name, alt_type', 'length', 'max'=>100),
			array('description, file_name', 'length', 'max'=>200),
			array('file_extension', 'length', 'max'=>10),
			array('creation_date', 'safe'),
			array('resource, name, description, file_name, file_extension, file_size, creation_date, unoconv, alt_type, page_count', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ref, resource, name, description, file_name, file_extension, file_size, creation_date, unoconv, alt_type, page_count', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ref' => Yii::t('app', 'Ref'),
			'resource' => Yii::t('app', 'Resource'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'file_name' => Yii::t('app', 'File Name'),
			'file_extension' => Yii::t('app', 'File Extension'),
			'file_size' => Yii::t('app', 'File Size'),
			'creation_date' => Yii::t('app', 'Creation Date'),
			'unoconv' => Yii::t('app', 'Unoconv'),
			'alt_type' => Yii::t('app', 'Alt Type'),
			'page_count' => Yii::t('app', 'Page Count'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ref', $this->ref);
		$criteria->compare('resource', $this->resource);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('file_name', $this->file_name, true);
		$criteria->compare('file_extension', $this->file_extension, true);
		$criteria->compare('file_size', $this->file_size);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('unoconv', $this->unoconv);
		$criteria->compare('alt_type', $this->alt_type, true);
		$criteria->compare('page_count', $this->page_count);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
