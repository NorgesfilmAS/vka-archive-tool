<?php

/**
 * This is the model base class for the table "usergroup".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Usergroup".
 *
 * Columns in table "usergroup" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $ref
 * @property string $name
 * @property string $permissions
 * @property string $fixed_theme
 * @property string $parent
 * @property string $search_filter
 * @property string $edit_filter
 * @property string $ip_restrict
 * @property string $resource_defaults
 * @property string $config_options
 * @property string $welcome_message
 * @property integer $request_mode
 * @property integer $allow_registration_selection
 * @property integer $moderator_id
 * @property string $email
 * @property integer $is_moderation_active
 * @property string $interval
 * @property string $down_time_start
 * @property string $down_time_end
 * @property string $last_checked
 * @property string $rights_json
 * @property string $visible_items
 * @property string $application_title
 *
 */
abstract class BaseUsergroup extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'usergroup';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Usergroup|Usergroups', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('request_mode, allow_registration_selection, moderator_id, is_moderation_active', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('fixed_theme, parent', 'length', 'max'=>50),
			array('email, interval, down_time_start, down_time_end, application_title', 'length', 'max'=>255),
			array('permissions, search_filter, edit_filter, ip_restrict, resource_defaults, config_options, welcome_message, last_checked, rights_json, visible_items', 'safe'),
			array('name, permissions, fixed_theme, parent, search_filter, edit_filter, ip_restrict, resource_defaults, config_options, welcome_message, request_mode, allow_registration_selection, moderator_id, email, is_moderation_active, interval, down_time_start, down_time_end, last_checked, rights_json, visible_items, application_title', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ref, name, permissions, fixed_theme, parent, search_filter, edit_filter, ip_restrict, resource_defaults, config_options, welcome_message, request_mode, allow_registration_selection, moderator_id, email, is_moderation_active, interval, down_time_start, down_time_end, last_checked, rights_json, visible_items, application_title', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ref' => Yii::t('app', 'Ref'),
			'name' => Yii::t('app', 'Name'),
			'permissions' => Yii::t('app', 'Permissions'),
			'fixed_theme' => Yii::t('app', 'Fixed Theme'),
			'parent' => Yii::t('app', 'Parent'),
			'search_filter' => Yii::t('app', 'Search Filter'),
			'edit_filter' => Yii::t('app', 'Edit Filter'),
			'ip_restrict' => Yii::t('app', 'Ip Restrict'),
			'resource_defaults' => Yii::t('app', 'Resource Defaults'),
			'config_options' => Yii::t('app', 'Config Options'),
			'welcome_message' => Yii::t('app', 'Welcome Message'),
			'request_mode' => Yii::t('app', 'Request Mode'),
			'allow_registration_selection' => Yii::t('app', 'Allow Registration Selection'),
			'moderator_id' => Yii::t('app', 'Moderator'),
			'email' => Yii::t('app', 'Email'),
			'is_moderation_active' => Yii::t('app', 'Is Moderation Active'),
			'interval' => Yii::t('app', 'Interval'),
			'down_time_start' => Yii::t('app', 'Down Time Start'),
			'down_time_end' => Yii::t('app', 'Down Time End'),
			'last_checked' => Yii::t('app', 'Last Checked'),
			'rights_json' => Yii::t('app', 'Rights Json'),
			'visible_items' => Yii::t('app', 'Visible Items'),
			'application_title' => Yii::t('app', 'Application Title'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ref', $this->ref);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('permissions', $this->permissions, true);
		$criteria->compare('fixed_theme', $this->fixed_theme, true);
		$criteria->compare('parent', $this->parent, true);
		$criteria->compare('search_filter', $this->search_filter, true);
		$criteria->compare('edit_filter', $this->edit_filter, true);
		$criteria->compare('ip_restrict', $this->ip_restrict, true);
		$criteria->compare('resource_defaults', $this->resource_defaults, true);
		$criteria->compare('config_options', $this->config_options, true);
		$criteria->compare('welcome_message', $this->welcome_message, true);
		$criteria->compare('request_mode', $this->request_mode);
		$criteria->compare('allow_registration_selection', $this->allow_registration_selection);
		$criteria->compare('moderator_id', $this->moderator_id);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('is_moderation_active', $this->is_moderation_active);
		$criteria->compare('interval', $this->interval, true);
		$criteria->compare('down_time_start', $this->down_time_start, true);
		$criteria->compare('down_time_end', $this->down_time_end, true);
		$criteria->compare('last_checked', $this->last_checked, true);
		$criteria->compare('rights_json', $this->rights_json, true);
		$criteria->compare('visible_items', $this->visible_items, true);
		$criteria->compare('application_title', $this->application_title, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
