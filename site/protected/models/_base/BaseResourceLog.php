<?php

/**
 * This is the model base class for the table "resource_log".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ResourceLog".
 *
 * Columns in table "resource_log" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $date
 * @property integer $user
 * @property integer $resource
 * @property string $type
 * @property integer $resource_type_field
 * @property string $notes
 * @property string $diff
 * @property integer $usageoption
 * @property string $purchase_size
 * @property string $purchase_price
 * @property string $access_key
 *
 */
abstract class BaseResourceLog extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'resource_log';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ResourceLog|ResourceLogs', $n);
	}

	public static function representingColumn() {
		return 'date';
	}

	public function rules() {
		return array(
			array('user, resource, resource_type_field, usageoption', 'numerical', 'integerOnly'=>true),
			array('type', 'length', 'max'=>1),
			array('purchase_size, purchase_price', 'length', 'max'=>10),
			array('access_key', 'length', 'max'=>50),
			array('date, notes, diff', 'safe'),
			array('date, user, resource, type, resource_type_field, notes, diff, usageoption, purchase_size, purchase_price, access_key', 'default', 'setOnEmpty' => true, 'value' => null),
			array('date, user, resource, type, resource_type_field, notes, diff, usageoption, purchase_size, purchase_price, access_key', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'date' => Yii::t('app', 'Date'),
			'user' => Yii::t('app', 'User'),
			'resource' => Yii::t('app', 'Resource'),
			'type' => Yii::t('app', 'Type'),
			'resource_type_field' => Yii::t('app', 'Resource Type Field'),
			'notes' => Yii::t('app', 'Notes'),
			'diff' => Yii::t('app', 'Diff'),
			'usageoption' => Yii::t('app', 'Usageoption'),
			'purchase_size' => Yii::t('app', 'Purchase Size'),
			'purchase_price' => Yii::t('app', 'Purchase Price'),
			'access_key' => Yii::t('app', 'Access Key'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('date', $this->date, true);
		$criteria->compare('user', $this->user);
		$criteria->compare('resource', $this->resource);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('resource_type_field', $this->resource_type_field);
		$criteria->compare('notes', $this->notes, true);
		$criteria->compare('diff', $this->diff, true);
		$criteria->compare('usageoption', $this->usageoption);
		$criteria->compare('purchase_size', $this->purchase_size, true);
		$criteria->compare('purchase_price', $this->purchase_price, true);
		$criteria->compare('access_key', $this->access_key, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
