<?php

/**
 * This is the model base class for the table "selected_item".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SelectedItem".
 *
 * Columns in table "selected_item" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $guid
 * @property integer $item_id
 * @property string $order_1
 * @property string $order_2
 * @property string $order_3
 * @property string $order_4
 * @property string $order_5
 * @property string $order_6
 * @property string $order_7
 * @property string $order_8
 * @property string $order_9
 * @property string $order_10
 * @property string $field_1
 * @property string $field_2
 * @property string $field_3
 * @property string $field_4
 * @property string $field_5
 * @property string $field_6
 * @property string $field_7
 * @property string $field_8
 * @property string $field_9
 * @property string $field_10
 * @property string $field_11
 * @property string $field_12
 * @property string $field_13
 * @property string $field_14
 * @property string $field_15
 * @property string $field_16
 * @property string $field_17
 * @property string $field_18
 * @property string $field_19
 * @property string $field_20
 *
 */
abstract class BaseSelectedItem extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'selected_item';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SelectedItem|SelectedItems', $n);
	}

	public static function representingColumn() {
		return 'guid';
	}

	public function rules() {
		return array(
			array('guid, item_id', 'required'),
			array('item_id', 'numerical', 'integerOnly'=>true),
			array('guid, order_1, order_2, order_3, order_4, order_5, order_6, order_7, order_8, order_9, order_10, field_1, field_2, field_3, field_4, field_5, field_6, field_7, field_8, field_9, field_10, field_11, field_12, field_13, field_14, field_15, field_16, field_17, field_18, field_19, field_20', 'length', 'max'=>255),
			array('order_1, order_2, order_3, order_4, order_5, order_6, order_7, order_8, order_9, order_10, field_1, field_2, field_3, field_4, field_5, field_6, field_7, field_8, field_9, field_10, field_11, field_12, field_13, field_14, field_15, field_16, field_17, field_18, field_19, field_20', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, guid, item_id, order_1, order_2, order_3, order_4, order_5, order_6, order_7, order_8, order_9, order_10, field_1, field_2, field_3, field_4, field_5, field_6, field_7, field_8, field_9, field_10, field_11, field_12, field_13, field_14, field_15, field_16, field_17, field_18, field_19, field_20', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'guid' => Yii::t('app', 'Guid'),
			'item_id' => Yii::t('app', 'Item'),
			'order_1' => Yii::t('app', 'Order 1'),
			'order_2' => Yii::t('app', 'Order 2'),
			'order_3' => Yii::t('app', 'Order 3'),
			'order_4' => Yii::t('app', 'Order 4'),
			'order_5' => Yii::t('app', 'Order 5'),
			'order_6' => Yii::t('app', 'Order 6'),
			'order_7' => Yii::t('app', 'Order 7'),
			'order_8' => Yii::t('app', 'Order 8'),
			'order_9' => Yii::t('app', 'Order 9'),
			'order_10' => Yii::t('app', 'Order 10'),
			'field_1' => Yii::t('app', 'Field 1'),
			'field_2' => Yii::t('app', 'Field 2'),
			'field_3' => Yii::t('app', 'Field 3'),
			'field_4' => Yii::t('app', 'Field 4'),
			'field_5' => Yii::t('app', 'Field 5'),
			'field_6' => Yii::t('app', 'Field 6'),
			'field_7' => Yii::t('app', 'Field 7'),
			'field_8' => Yii::t('app', 'Field 8'),
			'field_9' => Yii::t('app', 'Field 9'),
			'field_10' => Yii::t('app', 'Field 10'),
			'field_11' => Yii::t('app', 'Field 11'),
			'field_12' => Yii::t('app', 'Field 12'),
			'field_13' => Yii::t('app', 'Field 13'),
			'field_14' => Yii::t('app', 'Field 14'),
			'field_15' => Yii::t('app', 'Field 15'),
			'field_16' => Yii::t('app', 'Field 16'),
			'field_17' => Yii::t('app', 'Field 17'),
			'field_18' => Yii::t('app', 'Field 18'),
			'field_19' => Yii::t('app', 'Field 19'),
			'field_20' => Yii::t('app', 'Field 20'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('guid', $this->guid, true);
		$criteria->compare('item_id', $this->item_id);
		$criteria->compare('order_1', $this->order_1, true);
		$criteria->compare('order_2', $this->order_2, true);
		$criteria->compare('order_3', $this->order_3, true);
		$criteria->compare('order_4', $this->order_4, true);
		$criteria->compare('order_5', $this->order_5, true);
		$criteria->compare('order_6', $this->order_6, true);
		$criteria->compare('order_7', $this->order_7, true);
		$criteria->compare('order_8', $this->order_8, true);
		$criteria->compare('order_9', $this->order_9, true);
		$criteria->compare('order_10', $this->order_10, true);
		$criteria->compare('field_1', $this->field_1, true);
		$criteria->compare('field_2', $this->field_2, true);
		$criteria->compare('field_3', $this->field_3, true);
		$criteria->compare('field_4', $this->field_4, true);
		$criteria->compare('field_5', $this->field_5, true);
		$criteria->compare('field_6', $this->field_6, true);
		$criteria->compare('field_7', $this->field_7, true);
		$criteria->compare('field_8', $this->field_8, true);
		$criteria->compare('field_9', $this->field_9, true);
		$criteria->compare('field_10', $this->field_10, true);
		$criteria->compare('field_11', $this->field_11, true);
		$criteria->compare('field_12', $this->field_12, true);
		$criteria->compare('field_13', $this->field_13, true);
		$criteria->compare('field_14', $this->field_14, true);
		$criteria->compare('field_15', $this->field_15, true);
		$criteria->compare('field_16', $this->field_16, true);
		$criteria->compare('field_17', $this->field_17, true);
		$criteria->compare('field_18', $this->field_18, true);
		$criteria->compare('field_19', $this->field_19, true);
		$criteria->compare('field_20', $this->field_20, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
