<?php

/**
 * This is the model base class for the table "transfer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Transfer".
 *
 * Columns in table "transfer" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $art_id
 * @property integer $sender_id
 * @property string $creation_date
 * @property string $expire_date
 * @property integer $is_expired
 * @property string $key
 * @property string $message
 * @property string $recipients_json
 * @property string $files_json
 *
 */
abstract class BaseTransfer extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'transfer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Transfer|Transfers', $n);
	}

	public static function representingColumn() {
		return 'key';
	}

	public function rules() {
		return array(
			array('key', 'required'),
			array('art_id, sender_id, is_expired', 'numerical', 'integerOnly'=>true),
			array('key', 'length', 'max'=>255),
			array('creation_date, expire_date, message, recipients_json, files_json', 'safe'),
			array('art_id, sender_id, creation_date, expire_date, is_expired, message, recipients_json, files_json', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, art_id, sender_id, creation_date, expire_date, is_expired, key, message, recipients_json, files_json', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'art_id' => Yii::t('app', 'Art'),
			'sender_id' => Yii::t('app', 'Sender'),
			'creation_date' => Yii::t('app', 'Creation Date'),
			'expire_date' => Yii::t('app', 'Expire Date'),
			'is_expired' => Yii::t('app', 'Is Expired'),
			'key' => Yii::t('app', 'Key'),
			'message' => Yii::t('app', 'Message'),
			'recipients_json' => Yii::t('app', 'Recipients Json'),
			'files_json' => Yii::t('app', 'Files Json'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('art_id', $this->art_id);
		$criteria->compare('sender_id', $this->sender_id);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('expire_date', $this->expire_date, true);
		$criteria->compare('is_expired', $this->is_expired);
		$criteria->compare('key', $this->key, true);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('recipients_json', $this->recipients_json, true);
		$criteria->compare('files_json', $this->files_json, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
