<?php

/**
 * This is the model base class for the table "external_access_keys".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ExternalAccessKeys".
 *
 * Columns in table "external_access_keys" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $resource
 * @property string $access_key
 * @property integer $user
 * @property integer $collection
 * @property integer $request_feedback
 * @property string $email
 * @property string $date
 * @property string $lastused
 * @property integer $access
 * @property string $expires
 *
 */
abstract class BaseExternalAccessKeys extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'external_access_keys';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ExternalAccessKeys|ExternalAccessKeys', $n);
	}

	public static function representingColumn() {
		return 'access_key';
	}

	public function rules() {
		return array(
			array('resource, user, collection, request_feedback, access', 'numerical', 'integerOnly'=>true),
			array('access_key', 'length', 'max'=>10),
			array('email', 'length', 'max'=>100),
			array('date, lastused, expires', 'safe'),
			array('resource, access_key, user, collection, request_feedback, email, date, lastused, access, expires', 'default', 'setOnEmpty' => true, 'value' => null),
			array('resource, access_key, user, collection, request_feedback, email, date, lastused, access, expires', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'resource' => Yii::t('app', 'Resource'),
			'access_key' => Yii::t('app', 'Access Key'),
			'user' => Yii::t('app', 'User'),
			'collection' => Yii::t('app', 'Collection'),
			'request_feedback' => Yii::t('app', 'Request Feedback'),
			'email' => Yii::t('app', 'Email'),
			'date' => Yii::t('app', 'Date'),
			'lastused' => Yii::t('app', 'Lastused'),
			'access' => Yii::t('app', 'Access'),
			'expires' => Yii::t('app', 'Expires'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('resource', $this->resource);
		$criteria->compare('access_key', $this->access_key, true);
		$criteria->compare('user', $this->user);
		$criteria->compare('collection', $this->collection);
		$criteria->compare('request_feedback', $this->request_feedback);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('lastused', $this->lastused, true);
		$criteria->compare('access', $this->access);
		$criteria->compare('expires', $this->expires, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
