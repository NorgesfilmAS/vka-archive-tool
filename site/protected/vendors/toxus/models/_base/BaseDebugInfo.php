<?php

/**
 * This is the model base class for the table "debug_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DebugInfo".
 *
 * Columns in table "debug_info" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $creation_date
 * @property string $app_ident
 * @property string $device_ident
 * @property string $session_ident
 * @property integer $user_id
 * @property integer $type_id
 * @property string $error_url
 * @property string $error_message
 * @property string $cause
 * @property string $stacktrace
 * @property string $state
 *
 */
abstract class BaseDebugInfo extends TwigActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'debug_info';
	}

	public static function label($n = 1) {
		return Yii::t('base', 'DebugInfo|DebugInfos', $n);
	}

	public static function representingColumn() {
		return 'creation_date';
	}

	public function rules() {
		return array(
			array('user_id, type_id', 'numerical', 'integerOnly'=>true),
			array('app_ident, device_ident, session_ident, error_url, cause', 'length', 'max'=>255),
			array('creation_date, error_message, stacktrace, state', 'safe'),
			array('creation_date, app_ident, device_ident, session_ident, user_id, type_id, error_url, error_message, cause, stacktrace, state', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, creation_date, app_ident, device_ident, session_ident, user_id, type_id, error_url, error_message, cause, stacktrace, state', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('base', 'ID'),
			'creation_date' => Yii::t('base', 'Creation Date'),
			'app_ident' => Yii::t('base', 'App Ident'),
			'device_ident' => Yii::t('base', 'Device Ident'),
			'session_ident' => Yii::t('base', 'Session Ident'),
			'user_id' => Yii::t('base', 'User'),
			'type_id' => Yii::t('base', 'Type'),
			'error_url' => Yii::t('base', 'Error Url'),
			'error_message' => Yii::t('base', 'Error Message'),
			'cause' => Yii::t('base', 'Cause'),
			'stacktrace' => Yii::t('base', 'Stacktrace'),
			'state' => Yii::t('base', 'State'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('app_ident', $this->app_ident, true);
		$criteria->compare('device_ident', $this->device_ident, true);
		$criteria->compare('session_ident', $this->session_ident, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('error_url', $this->error_url, true);
		$criteria->compare('error_message', $this->error_message, true);
		$criteria->compare('cause', $this->cause, true);
		$criteria->compare('stacktrace', $this->stacktrace, true);
		$criteria->compare('state', $this->state, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
