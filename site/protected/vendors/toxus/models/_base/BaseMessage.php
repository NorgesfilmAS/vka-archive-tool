<?php

/**
 * This is the model base class for the table "message".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Message".
 *
 * Columns in table "message" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $subject
 * @property string $message
 * @property string $creation_date
 * @property string $modified_date
 * @property integer $user_id
 * @property string $ip
 * @property integer $is_handled
 * @property integer $reply_to_message_id
 *
 */
abstract class BaseMessage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'message';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Message|Messages', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, email, message', 'required'),
			array('user_id, is_handled, reply_to_message_id', 'numerical', 'integerOnly'=>true),
			array('name, email, subject, ip', 'length', 'max'=>255),
			array('creation_date, modified_date', 'safe'),
			array('subject, creation_date, modified_date, user_id, ip, is_handled, reply_to_message_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, email, subject, message, creation_date, modified_date, user_id, ip, is_handled, reply_to_message_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'subject' => Yii::t('app', 'Subject'),
			'message' => Yii::t('app', 'Message'),
			'creation_date' => Yii::t('app', 'Creation Date'),
			'modified_date' => Yii::t('app', 'Modified Date'),
			'user_id' => Yii::t('app', 'User'),
			'ip' => Yii::t('app', 'Ip'),
			'is_handled' => Yii::t('app', 'Is Handled'),
			'reply_to_message_id' => Yii::t('app', 'Reply To Message'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('modified_date', $this->modified_date, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('is_handled', $this->is_handled);
		$criteria->compare('reply_to_message_id', $this->reply_to_message_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
