<?php

/**
 * This is the model base class for the table "logging".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Logging".
 *
 * Columns in table "logging" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $creation_date
 * @property integer $profile_id
 * @property string $controller
 * @property integer $model_id
 * @property string $processing_time
 * @property string $message
 * @property string $url
 * @property string $referer
 * @property string $ip
 * @property string $error_state
 *
 */
abstract class BaseLogging extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'logging';
	}

	public static function label($n = 1) {
		return Yii::t('base', 'Logging|Loggings', $n);
	}

	public static function representingColumn() {
		return 'processing_time';
	}

	public function rules() {
		return array(
			array('profile_id, model_id', 'numerical', 'integerOnly'=>true),
			array('controller, processing_time, url, referer, ip', 'length', 'max'=>255),
			array('creation_date, message, error_state', 'safe'),
			array('creation_date, profile_id, controller, model_id, processing_time, message, url, referer, ip, error_state', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, creation_date, profile_id, controller, model_id, processing_time, message, url, referer, ip, error_state', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('base', 'ID'),
			'creation_date' => Yii::t('base', 'Creation Date'),
			'profile_id' => Yii::t('base', 'Profile'),
			'controller' => Yii::t('base', 'Controller'),
			'model_id' => Yii::t('base', 'Model'),
			'processing_time' => Yii::t('base', 'Processing Time'),
			'message' => Yii::t('base', 'Message'),
			'url' => Yii::t('base', 'Url'),
			'referer' => Yii::t('base', 'Referer'),
			'ip' => Yii::t('base', 'Ip'),
			'error_state' => Yii::t('base', 'Error State'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('profile_id', $this->profile_id);
		$criteria->compare('controller', $this->controller, true);
		$criteria->compare('model_id', $this->model_id);
		$criteria->compare('processing_time', $this->processing_time, true);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('referer', $this->referer, true);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('error_state', $this->error_state, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
